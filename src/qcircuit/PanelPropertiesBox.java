/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelPropertiesBox.java
 *
 * Created on Nov 6, 2012, 7:41:32 PM
 */
package qcircuit;

import java.awt.event.ActionEvent;
import java.io.BufferedWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author erhannis
 */
public class PanelPropertiesBox extends javax.swing.JPanel {
    public QCircuitView parent;
    
    /** Creates new form PanelPropertiesBox */
    public PanelPropertiesBox(QCircuitView parent) {
        this.parent = parent;
        initComponents();
    }
    
    public QState lastState = null;
    public void showState(QState state) {
        //lastState = state;
        tabsTabs.setSelectedComponent(panelStateProps);
        areaStateText.setText(state.toString());
    }
    
    public void showCircuit(QCircuit c) {
        tabsTabs.setSelectedComponent(panelCircuitProps);
        if (c != null) {
            areaCircuitText.setLineWrap(false);
            areaCircuitText.setWrapStyleWord(true);
            areaCircuitText.setText(getCircuitInfo(c));
        }
    }

    public void showGate(IQGate g) {
        tabsTabs.setSelectedComponent(panelGateProps);
        if (g != null) {
            areaGateText.setLineWrap(false);
            areaGateText.setWrapStyleWord(true);
            areaGateText.setText(getGateInfo(g));
        }
    }
    
    public void onSelectedCircuitChanged() {
        if (parent.vp.selectedCircuit == null) {
            panelCircuitProps.setEnabled(false);
        } else {
            panelCircuitProps.setEnabled(true);
        }
    }

    public void onSelectedGateChanged() {
        if (parent.vp.selectedGate == null) {
            panelGateProps.setEnabled(false);
        } else {
            panelGateProps.setEnabled(true);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        tabsTabs = new javax.swing.JTabbedPane();
        panelCircuitProps = new javax.swing.JPanel();
        btnDeleteCircuit = new javax.swing.JButton();
        btnSaveCircuit = new javax.swing.JButton();
        btnCircuitToMatrix = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaCircuitText = new javax.swing.JTextArea();
        btnCircuitInfo = new javax.swing.JButton();
        btnCircuitMatrixForm = new javax.swing.JButton();
        panelGateProps = new javax.swing.JPanel();
        btnDeleteGate = new javax.swing.JButton();
        btnSaveGate = new javax.swing.JButton();
        btnGateToMatrix = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaGateText = new javax.swing.JTextArea();
        btnGateInfo = new javax.swing.JButton();
        btnGateMatrixForm = new javax.swing.JButton();
        panelStateProps = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaStateText = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        areaLog = new javax.swing.JTextArea();

        setName("Form"); // NOI18N

        tabsTabs.setName("tabsTabs"); // NOI18N

        panelCircuitProps.setEnabled(false);
        panelCircuitProps.setName("panelCircuitProps"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelCircuitProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), panelCircuitProps, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(qcircuit.QCircuitApp.class).getContext().getResourceMap(PanelPropertiesBox.class);
        btnDeleteCircuit.setText(resourceMap.getString("btnDeleteCircuit.text")); // NOI18N
        btnDeleteCircuit.setName("btnDeleteCircuit"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelCircuitProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnDeleteCircuit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnDeleteCircuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCircuitActionPerformed(evt);
            }
        });

        btnSaveCircuit.setText(resourceMap.getString("btnSaveCircuit.text")); // NOI18N
        btnSaveCircuit.setToolTipText(resourceMap.getString("btnSaveCircuit.toolTipText")); // NOI18N
        btnSaveCircuit.setName("btnSaveCircuit"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelCircuitProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnSaveCircuit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnSaveCircuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCircuitActionPerformed(evt);
            }
        });

        btnCircuitToMatrix.setText(resourceMap.getString("btnCircuitToMatrix.text")); // NOI18N
        btnCircuitToMatrix.setToolTipText(resourceMap.getString("btnCircuitToMatrix.toolTipText")); // NOI18N
        btnCircuitToMatrix.setName("btnCircuitToMatrix"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelCircuitProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnCircuitToMatrix, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnCircuitToMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCircuitToMatrixActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        areaCircuitText.setColumns(20);
        areaCircuitText.setFont(resourceMap.getFont("areaCircuitText.font")); // NOI18N
        areaCircuitText.setRows(5);
        areaCircuitText.setName("areaCircuitText"); // NOI18N
        jScrollPane2.setViewportView(areaCircuitText);

        btnCircuitInfo.setText(resourceMap.getString("btnCircuitInfo.text")); // NOI18N
        btnCircuitInfo.setName("btnCircuitInfo"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelCircuitProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnCircuitInfo, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnCircuitInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCircuitInfoActionPerformed(evt);
            }
        });

        btnCircuitMatrixForm.setText(resourceMap.getString("btnCircuitMatrixForm.text")); // NOI18N
        btnCircuitMatrixForm.setToolTipText(resourceMap.getString("btnCircuitMatrixForm.toolTipText")); // NOI18N
        btnCircuitMatrixForm.setName("btnCircuitMatrixForm"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelCircuitProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnCircuitMatrixForm, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnCircuitMatrixForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCircuitMatrixFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCircuitPropsLayout = new javax.swing.GroupLayout(panelCircuitProps);
        panelCircuitProps.setLayout(panelCircuitPropsLayout);
        panelCircuitPropsLayout.setHorizontalGroup(
            panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCircuitPropsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCircuitPropsLayout.createSequentialGroup()
                        .addGroup(panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDeleteCircuit)
                            .addComponent(btnSaveCircuit))
                        .addGap(42, 42, 42)
                        .addGroup(panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCircuitToMatrix, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCircuitMatrixForm, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(panelCircuitPropsLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(btnCircuitInfo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCircuitPropsLayout.setVerticalGroup(
            panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCircuitPropsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addGroup(panelCircuitPropsLayout.createSequentialGroup()
                        .addGroup(panelCircuitPropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveCircuit)
                            .addGroup(panelCircuitPropsLayout.createSequentialGroup()
                                .addComponent(btnCircuitToMatrix)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCircuitMatrixForm)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCircuitInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(btnDeleteCircuit)))
                .addContainerGap())
        );

        tabsTabs.addTab(resourceMap.getString("panelCircuitProps.TabConstraints.tabTitle"), panelCircuitProps); // NOI18N

        panelGateProps.setEnabled(false);
        panelGateProps.setName("panelGateProps"); // NOI18N

        btnDeleteGate.setText(resourceMap.getString("btnDeleteGate.text")); // NOI18N
        btnDeleteGate.setName("btnDeleteGate"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelGateProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnDeleteGate, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnDeleteGate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGateActionPerformed(evt);
            }
        });

        btnSaveGate.setText(resourceMap.getString("btnSaveGate.text")); // NOI18N
        btnSaveGate.setToolTipText(resourceMap.getString("btnSaveGate.toolTipText")); // NOI18N
        btnSaveGate.setName("btnSaveGate"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelGateProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnSaveGate, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnSaveGate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveGateActionPerformed(evt);
            }
        });

        btnGateToMatrix.setText(resourceMap.getString("btnGateToMatrix.text")); // NOI18N
        btnGateToMatrix.setToolTipText(resourceMap.getString("btnGateToMatrix.toolTipText")); // NOI18N
        btnGateToMatrix.setName("btnGateToMatrix"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelGateProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnGateToMatrix, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnGateToMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGateToMatrixActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        areaGateText.setColumns(20);
        areaGateText.setFont(resourceMap.getFont("areaGateText.font")); // NOI18N
        areaGateText.setRows(5);
        areaGateText.setName("areaGateText"); // NOI18N
        jScrollPane3.setViewportView(areaGateText);

        btnGateInfo.setText(resourceMap.getString("btnGateInfo.text")); // NOI18N
        btnGateInfo.setName("btnGateInfo"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelGateProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnGateInfo, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnGateInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGateInfoActionPerformed(evt);
            }
        });

        btnGateMatrixForm.setText(resourceMap.getString("btnGateMatrixForm.text")); // NOI18N
        btnGateMatrixForm.setToolTipText(resourceMap.getString("btnGateMatrixForm.toolTipText")); // NOI18N
        btnGateMatrixForm.setName("btnGateMatrixForm"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, panelGateProps, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), btnGateMatrixForm, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnGateMatrixForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGateMatrixFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGatePropsLayout = new javax.swing.GroupLayout(panelGateProps);
        panelGateProps.setLayout(panelGatePropsLayout);
        panelGatePropsLayout.setHorizontalGroup(
            panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGatePropsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGatePropsLayout.createSequentialGroup()
                        .addGroup(panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDeleteGate)
                            .addComponent(btnSaveGate))
                        .addGap(42, 42, 42)
                        .addGroup(panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGateToMatrix, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGateMatrixForm, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(panelGatePropsLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(btnGateInfo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelGatePropsLayout.setVerticalGroup(
            panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGatePropsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addGroup(panelGatePropsLayout.createSequentialGroup()
                        .addGroup(panelGatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveGate)
                            .addGroup(panelGatePropsLayout.createSequentialGroup()
                                .addComponent(btnGateToMatrix)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGateMatrixForm)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGateInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(btnDeleteGate)))
                .addContainerGap())
        );

        tabsTabs.addTab(resourceMap.getString("panelGateProps.TabConstraints.tabTitle"), panelGateProps); // NOI18N

        panelStateProps.setName("panelStateProps"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        areaStateText.setColumns(20);
        areaStateText.setFont(resourceMap.getFont("areaStateText.font")); // NOI18N
        areaStateText.setLineWrap(true);
        areaStateText.setRows(5);
        areaStateText.setWrapStyleWord(true);
        areaStateText.setName("areaStateText"); // NOI18N
        jScrollPane1.setViewportView(areaStateText);

        javax.swing.GroupLayout panelStatePropsLayout = new javax.swing.GroupLayout(panelStateProps);
        panelStateProps.setLayout(panelStatePropsLayout);
        panelStatePropsLayout.setHorizontalGroup(
            panelStatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatePropsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelStatePropsLayout.setVerticalGroup(
            panelStatePropsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatePropsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabsTabs.addTab(resourceMap.getString("panelStateProps.TabConstraints.tabTitle"), panelStateProps); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        areaLog.setColumns(20);
        areaLog.setRows(5);
        areaLog.setText(resourceMap.getString("areaLog.text")); // NOI18N
        areaLog.setEnabled(false);
        areaLog.setName("areaLog"); // NOI18N
        jScrollPane4.setViewportView(areaLog);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabsTabs.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsTabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    public String getCircuitInfo(QCircuit c) {
        StringBuffer sb = new StringBuffer();
        sb.append("bits: " + c.bits + "\n");
        sb.append("state size: " + (1 << c.bits) + "\n");
        sb.append("matrix size: " + (1 << (2 * c.bits)) + "\n");
        sb.append("gate count: " + c.gates.size() + "\n");
        sb.append("top left: (" + c.origin.x + ", " + c.origin.y + ")\n");
        return sb.toString();
    }

    public String getGateInfo(IQGate g) {
        StringBuffer sb = new StringBuffer();
        sb.append("gate class: " + g.getClass().getName() + "\n");
        if (g instanceof CNot) {
            CNot c = (CNot)g;
            if (c.bits.length > 0) {
                sb.append("target bit: " + c.bits[0] + "\n");
                sb.append("control bits: {");
                if (c.bits.length > 1) {
                    sb.append(c.bits[1]);
                }
                for (int i = 2; i < c.bits.length; i++) {
                    sb.append(", " + c.bits[i]);
                }
                sb.append("}\n");
            }
        } else if (g instanceof Hadamard) {
            Hadamard h = (Hadamard)g;
            sb.append("target bit: " + h.bit + "\n");
        } else if (g instanceof PauliZ) {
            PauliZ z = (PauliZ)g;
            sb.append("target bit: " + z.bit + "\n");
        } else if (g instanceof MatrixGate) {
            MatrixGate m = (MatrixGate)g;
            sb.append("bits: " + m.bits + "\n");
            sb.append("state size: " + m.matrix.rows + "\n");
            sb.append("matrix size: " + (m.matrix.cols * m.matrix.rows) + "\n");
        } else {
            sb.append("unknown gate class\n");
        }
        return sb.toString();
    }
    
    private void btnCircuitInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCircuitInfoActionPerformed
        if (parent.vp.selectedCircuit != null) {
            areaCircuitText.setLineWrap(false);
            areaCircuitText.setWrapStyleWord(true);
            areaCircuitText.setText(getCircuitInfo(parent.vp.selectedCircuit));
        }
    }//GEN-LAST:event_btnCircuitInfoActionPerformed

    private void btnGateInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGateInfoActionPerformed
        if (parent.vp.selectedGate != null) {
            areaGateText.setLineWrap(false);
            areaGateText.setWrapStyleWord(true);
            areaGateText.setText(getGateInfo(parent.vp.selectedGate));
        }
    }//GEN-LAST:event_btnGateInfoActionPerformed

    private void btnGateToMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGateToMatrixActionPerformed
        if (parent.vp.selectedGate != null) {
            areaGateText.setLineWrap(false);
            areaGateText.setWrapStyleWord(false);
            if ((evt.getModifiers() & ActionEvent.CTRL_MASK) == 0) {
                areaGateText.setText(parent.vp.selectedGate.toMatrix().toSquareExportString());
            } else {
                areaGateText.setText(parent.vp.selectedGate.toInverseMatrix().toSquareExportString());
            }
        }
    }//GEN-LAST:event_btnGateToMatrixActionPerformed

    private void btnCircuitToMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCircuitToMatrixActionPerformed
        if (parent.vp.selectedCircuit != null) {
            areaCircuitText.setLineWrap(false);
            areaCircuitText.setWrapStyleWord(false);
            if ((evt.getModifiers() & ActionEvent.CTRL_MASK) == 0) {
                areaCircuitText.setText(parent.vp.selectedCircuit.toMatrix().toSquareExportString());
            } else {
                areaCircuitText.setText(parent.vp.selectedCircuit.toInverseMatrix().toSquareExportString());
            }
        }
    }//GEN-LAST:event_btnCircuitToMatrixActionPerformed

    private void btnDeleteCircuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCircuitActionPerformed
        parent.deleteSelectedCircuit();
    }//GEN-LAST:event_btnDeleteCircuitActionPerformed

    private void btnDeleteGateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGateActionPerformed
        parent.deleteSelectedGate();
    }//GEN-LAST:event_btnDeleteGateActionPerformed

    private void btnCircuitMatrixFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCircuitMatrixFormActionPerformed
        if (parent.vp.selectedCircuit != null) {
            areaCircuitText.setLineWrap(false);
            areaCircuitText.setWrapStyleWord(false);
            if ((evt.getModifiers() & ActionEvent.CTRL_MASK) == 0) {
                areaCircuitText.setText(parent.vp.selectedCircuit.toMatrix().toMatrixForm(3));
            } else {
                areaCircuitText.setText(parent.vp.selectedCircuit.toInverseMatrix().toMatrixForm(3));
            }
        }
    }//GEN-LAST:event_btnCircuitMatrixFormActionPerformed

    private void btnGateMatrixFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGateMatrixFormActionPerformed
        if (parent.vp.selectedGate != null) {
            areaGateText.setLineWrap(false);
            areaGateText.setWrapStyleWord(false);
            if ((evt.getModifiers() & ActionEvent.CTRL_MASK) == 0) {
                areaGateText.setText(parent.vp.selectedGate.toMatrix().toMatrixForm(3));
            } else {
                areaGateText.setText(parent.vp.selectedGate.toInverseMatrix().toMatrixForm(3));
            }
        }
    }//GEN-LAST:event_btnGateMatrixFormActionPerformed

    private void btnSaveCircuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCircuitActionPerformed
        if (parent.vp.selectedCircuit != null) {
            if (parent.chooser.showSaveDialog(parent.getFrame()) == JFileChooser.APPROVE_OPTION) {
                if ((evt.getModifiers() & ActionEvent.CTRL_MASK) == 0) {
                    parent.saveCircuit(parent.vp.selectedCircuit, parent.chooser.getSelectedFile());
                } else {
                    parent.saveCircuit((QCircuit)parent.vp.selectedCircuit.toInverseCircuit(), parent.chooser.getSelectedFile());
                }
            }
        }
    }//GEN-LAST:event_btnSaveCircuitActionPerformed

    private void btnSaveGateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveGateActionPerformed
        if (parent.vp.selectedGate != null) {
            if (parent.chooser.showSaveDialog(parent.getFrame()) == JFileChooser.APPROVE_OPTION) {
                if ((evt.getModifiers() & ActionEvent.CTRL_MASK) == 0) {
                    parent.saveGate(parent.vp.selectedGate, parent.chooser.getSelectedFile());
                } else {
                    parent.saveGate(parent.vp.selectedGate.toInverseGate(), parent.chooser.getSelectedFile());
                }
            }
        }
    }//GEN-LAST:event_btnSaveGateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea areaCircuitText;
    public javax.swing.JTextArea areaGateText;
    private javax.swing.JTextArea areaLog;
    public javax.swing.JTextArea areaStateText;
    private javax.swing.JButton btnCircuitInfo;
    private javax.swing.JButton btnCircuitMatrixForm;
    private javax.swing.JButton btnCircuitToMatrix;
    private javax.swing.JButton btnDeleteCircuit;
    private javax.swing.JButton btnDeleteGate;
    private javax.swing.JButton btnGateInfo;
    private javax.swing.JButton btnGateMatrixForm;
    private javax.swing.JButton btnGateToMatrix;
    private javax.swing.JButton btnSaveCircuit;
    private javax.swing.JButton btnSaveGate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel panelCircuitProps;
    private javax.swing.JPanel panelGateProps;
    private javax.swing.JPanel panelStateProps;
    private javax.swing.JTabbedPane tabsTabs;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
